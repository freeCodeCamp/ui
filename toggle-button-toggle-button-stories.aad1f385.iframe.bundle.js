"use strict";(self.webpackChunk_freecodecamp_ui=self.webpackChunk_freecodecamp_ui||[]).push([[381],{"./src/toggle-button/toggle-button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checked:()=>Checked,Default:()=>Default,Disabled:()=>Disabled,InsideToggleGroup:()=>InsideToggleGroup,Large:()=>Large,Medium:()=>Medium,RadioChecked:()=>RadioChecked,RadioUnchecked:()=>RadioUnchecked,__namedExportsOrder:()=>__namedExportsOrder,default:()=>toggle_button_stories});var react=__webpack_require__("./node_modules/.pnpm/react@16.14.0/node_modules/react/index.js");const defaultClassNames=["relative","border-3","text-center","inline-block","cursor-pointer","border-foreground-secondary","focus:outline-none","focus:ring","focus:ring-focus-outline-color","focus-within:ring","focus-within:ring-focus-outline-color","aria-disabled:cursor-not-allowed","aria-disabled:opacity-50","ml-[-3px]","first:ml-0"],ToggleButton=_ref2=>{let{bsSize="small",type="button",disabled,children,checked,onChange,value,name}=_ref2;const classNames=(_ref=>{let{bsSize,checked,disabled}=_ref;const classNames=[...defaultClassNames,...checked?["cursor-default","bg-foreground-primary","text-background-primary"]:["bg-background-quaternary","text-foreground-secondary"],...disabled?["active:before:hidden"]:["active:before:w-full","active:before:h-full","active:before:absolute","active:before:inset-0","active:before:border-3","active:before:border-transparent","active:before:bg-gray-900","active:before:opacity-20","dark:hover:bg-background-primary","dark:hover:text-foreground-primary",...checked?["hover:bg-background-quaternary","hover:text-foreground-secondary"]:["hover:bg-foreground-primary","hover:text-background-primary"]]];switch(bsSize){case"large":classNames.push("px-8 py-2.5 text-lg");break;case"medium":classNames.push("px-6 py-1.5 text-md");break;default:classNames.push("px-5 py-1 text-sm")}return classNames.join(" ")})({bsSize,disabled,checked}),handleChange=()=>{!disabled&&onChange&&onChange(!0)};return"radio"===type?react.createElement("label",{htmlFor:"toggle-btn-radio",className:classNames},react.createElement("input",{type:"radio",id:"toggle-btn-radio",name,value,onChange:handleChange,checked,"aria-disabled":disabled,className:"absolute h-0 w-0 opacity-0"}),children):react.createElement("button",{"aria-pressed":checked,"aria-disabled":disabled,className:classNames,onClick:handleChange},children)};try{ToggleButton.displayName="ToggleButton",ToggleButton.__docgenInfo={description:"",displayName:"ToggleButton",props:{bsSize:{defaultValue:{value:"small"},description:"",name:"bsSize",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},bsStyle:{defaultValue:null,description:"",name:"bsStyle",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"primary"'},{value:'"danger"'}]}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean | undefined"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: boolean) => void) | undefined"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | undefined"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | undefined"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string | undefined"}},type:{defaultValue:{value:"button"},description:"",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"button"'},{value:'"radio"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/toggle-button/toggle-button.tsx#ToggleButton"]={docgenInfo:ToggleButton.__docgenInfo,name:"ToggleButton",path:"src/toggle-button/toggle-button.tsx#ToggleButton"})}catch(__react_docgen_typescript_loader_error){}const Default={args:{children:"Off"}},Checked={args:{checked:!0,children:"On",value:"Value"}},Large={args:{bsSize:"large",children:"Off"}},Medium={args:{bsSize:"medium",children:"Off"}},Disabled={args:{children:"Off",disabled:!0}},RadioChecked={args:{type:"radio",children:"On",value:"radio",name:"radio",checked:!0}},RadioUnchecked={args:{type:"radio",children:"Off",value:"radio",name:"radio"}},InsideToggleGroup=()=>{const[checked,setChecked]=(0,react.useState)(!0);return react.createElement(react.Fragment,null,react.createElement(ToggleButton,{checked,onChange:checked=>{setChecked(checked)}},"On"),react.createElement(ToggleButton,{checked:!checked,onChange:checked=>{setChecked(!checked)}},"Off"))},toggle_button_stories={title:"WIP/ToggleButton",component:ToggleButton,parameters:{controls:{include:["children","bsStyle","bsSize","disabled","checked","onChange","value","name"]}},argTypes:{bsStyle:{options:["primary"]},bsSize:{options:["small","medium","large"]},disabled:{options:[!0,!1],control:{type:"radio"}},checked:{options:[!0,!1],control:{type:"radio"}},onChange:{action:"changed"},value:{type:{name:"string"}},name:{type:{name:"string"}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Off"\n  }\n}',...Default.parameters?.docs?.source}}},Checked.parameters={...Checked.parameters,docs:{...Checked.parameters?.docs,source:{originalSource:'{\n  args: {\n    checked: true,\n    children: "On",\n    value: "Value"\n  }\n}',...Checked.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:'{\n  args: {\n    bsSize: "large",\n    children: "Off"\n  }\n}',...Large.parameters?.docs?.source}}},Medium.parameters={...Medium.parameters,docs:{...Medium.parameters?.docs,source:{originalSource:'{\n  args: {\n    bsSize: "medium",\n    children: "Off"\n  }\n}',...Medium.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Off",\n    disabled: true\n  }\n}',...Disabled.parameters?.docs?.source}}},RadioChecked.parameters={...RadioChecked.parameters,docs:{...RadioChecked.parameters?.docs,source:{originalSource:'{\n  args: {\n    type: "radio",\n    children: "On",\n    value: "radio",\n    name: "radio",\n    checked: true\n  }\n}',...RadioChecked.parameters?.docs?.source}}},RadioUnchecked.parameters={...RadioUnchecked.parameters,docs:{...RadioUnchecked.parameters?.docs,source:{originalSource:'{\n  args: {\n    type: "radio",\n    children: "Off",\n    value: "radio",\n    name: "radio"\n  }\n}',...RadioUnchecked.parameters?.docs?.source}}},InsideToggleGroup.parameters={...InsideToggleGroup.parameters,docs:{...InsideToggleGroup.parameters?.docs,source:{originalSource:"(): JSX.Element => {\n  const [checked, setChecked] = useState(true);\n  return <>\n            <ToggleButton checked={checked} onChange={checked => {\n      setChecked(checked);\n    }}>\n                On\n            </ToggleButton>\n            <ToggleButton checked={!checked} onChange={checked => {\n      setChecked(!checked);\n    }}>\n                Off\n            </ToggleButton>\n        </>;\n}",...InsideToggleGroup.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Checked","Large","Medium","Disabled","RadioChecked","RadioUnchecked","InsideToggleGroup"]}}]);